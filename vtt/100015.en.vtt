WEBVTT
Kind: captions
Language: en

00:00:00.080 --> 00:00:01.589 align:start position:0%
 
everyone<00:00:00.480><c> welcome</c><00:00:00.880><c> back</c><00:00:01.120><c> and</c><00:00:01.199><c> let's</c><00:00:01.360><c> write</c>

00:00:01.589 --> 00:00:01.599 align:start position:0%
everyone welcome back and let's write
 

00:00:01.599 --> 00:00:03.669 align:start position:0%
everyone welcome back and let's write
some<00:00:01.760><c> more</c><00:00:01.920><c> neat</c><00:00:02.159><c> code</c><00:00:02.480><c> today</c><00:00:02.800><c> so</c><00:00:03.040><c> today</c><00:00:03.360><c> let's</c>

00:00:03.669 --> 00:00:03.679 align:start position:0%
some more neat code today so today let's
 

00:00:03.679 --> 00:00:04.230 align:start position:0%
some more neat code today so today let's
solve

00:00:04.230 --> 00:00:04.240 align:start position:0%
solve
 

00:00:04.240 --> 00:00:07.590 align:start position:0%
solve
merge<00:00:04.720><c> intervals</c><00:00:05.680><c> we</c><00:00:05.920><c> are</c><00:00:06.000><c> given</c><00:00:06.560><c> an</c><00:00:06.799><c> array</c><00:00:07.279><c> of</c>

00:00:07.590 --> 00:00:07.600 align:start position:0%
merge intervals we are given an array of
 

00:00:07.600 --> 00:00:10.310 align:start position:0%
merge intervals we are given an array of
intervals<00:00:08.320><c> with</c><00:00:08.559><c> a</c><00:00:08.880><c> start</c><00:00:09.440><c> and</c><00:00:09.599><c> an</c><00:00:09.760><c> end</c><00:00:10.000><c> value</c>

00:00:10.310 --> 00:00:10.320 align:start position:0%
intervals with a start and an end value
 

00:00:10.320 --> 00:00:12.629 align:start position:0%
intervals with a start and an end value
so<00:00:10.559><c> an</c><00:00:10.719><c> interval</c><00:00:11.120><c> is</c><00:00:11.280><c> a</c><00:00:11.360><c> start</c><00:00:11.679><c> and</c><00:00:11.840><c> end</c><00:00:12.000><c> value</c>

00:00:12.629 --> 00:00:12.639 align:start position:0%
so an interval is a start and end value
 

00:00:12.639 --> 00:00:14.789 align:start position:0%
so an interval is a start and end value
you<00:00:12.719><c> can</c><00:00:12.880><c> think</c><00:00:13.040><c> of</c><00:00:13.200><c> it</c><00:00:13.360><c> like</c><00:00:13.599><c> a</c><00:00:13.840><c> class</c><00:00:14.400><c> or</c><00:00:14.559><c> a</c>

00:00:14.789 --> 00:00:14.799 align:start position:0%
you can think of it like a class or a
 

00:00:14.799 --> 00:00:16.390 align:start position:0%
you can think of it like a class or a
meeting<00:00:15.440><c> or</c><00:00:15.920><c> some</c>

00:00:16.390 --> 00:00:16.400 align:start position:0%
meeting or some
 

00:00:16.400 --> 00:00:19.189 align:start position:0%
meeting or some
kind<00:00:16.560><c> of</c><00:00:16.720><c> time</c><00:00:17.039><c> period</c><00:00:17.440><c> or</c><00:00:17.600><c> whatever</c><00:00:18.400><c> and</c><00:00:18.880><c> for</c>

00:00:19.189 --> 00:00:19.199 align:start position:0%
kind of time period or whatever and for
 

00:00:19.199 --> 00:00:19.910 align:start position:0%
kind of time period or whatever and for
each<00:00:19.439><c> of</c><00:00:19.520><c> these</c>

00:00:19.910 --> 00:00:19.920 align:start position:0%
each of these
 

00:00:19.920 --> 00:00:22.790 align:start position:0%
each of these
intervals<00:00:20.960><c> we</c><00:00:21.199><c> want</c><00:00:21.359><c> to</c><00:00:21.520><c> take</c><00:00:22.080><c> all</c><00:00:22.320><c> the</c>

00:00:22.790 --> 00:00:22.800 align:start position:0%
intervals we want to take all the
 

00:00:22.800 --> 00:00:23.830 align:start position:0%
intervals we want to take all the
overlapping

00:00:23.830 --> 00:00:23.840 align:start position:0%
overlapping
 

00:00:23.840 --> 00:00:26.790 align:start position:0%
overlapping
intervals<00:00:24.720><c> and</c><00:00:24.880><c> then</c><00:00:25.359><c> merge</c><00:00:25.840><c> them</c><00:00:26.480><c> and</c><00:00:26.560><c> then</c>

00:00:26.790 --> 00:00:26.800 align:start position:0%
intervals and then merge them and then
 

00:00:26.800 --> 00:00:27.990 align:start position:0%
intervals and then merge them and then
we're<00:00:26.960><c> going</c><00:00:27.039><c> to</c><00:00:27.119><c> have</c><00:00:27.279><c> a</c><00:00:27.519><c> new</c>

00:00:27.990 --> 00:00:28.000 align:start position:0%
we're going to have a new
 

00:00:28.000 --> 00:00:31.349 align:start position:0%
we're going to have a new
output<00:00:28.640><c> array</c><00:00:29.519><c> of</c><00:00:29.760><c> intervals</c><00:00:30.480><c> and</c><00:00:30.800><c> since</c><00:00:31.119><c> we</c>

00:00:31.349 --> 00:00:31.359 align:start position:0%
output array of intervals and since we
 

00:00:31.359 --> 00:00:33.510 align:start position:0%
output array of intervals and since we
merged<00:00:31.920><c> the</c><00:00:32.160><c> overlapping</c><00:00:32.880><c> intervals</c><00:00:33.360><c> the</c>

00:00:33.510 --> 00:00:33.520 align:start position:0%
merged the overlapping intervals the
 

00:00:33.520 --> 00:00:34.069 align:start position:0%
merged the overlapping intervals the
result

00:00:34.069 --> 00:00:34.079 align:start position:0%
result
 

00:00:34.079 --> 00:00:37.110 align:start position:0%
result
is<00:00:34.239><c> going</c><00:00:34.480><c> to</c><00:00:34.640><c> be</c><00:00:35.320><c> non-overlapping</c><00:00:36.559><c> so</c><00:00:36.960><c> in</c>

00:00:37.110 --> 00:00:37.120 align:start position:0%
is going to be non-overlapping so in
 

00:00:37.120 --> 00:00:37.750 align:start position:0%
is going to be non-overlapping so in
this<00:00:37.360><c> case</c>

00:00:37.750 --> 00:00:37.760 align:start position:0%
this case
 

00:00:37.760 --> 00:00:40.950 align:start position:0%
this case
we<00:00:38.000><c> see</c><00:00:38.239><c> we</c><00:00:38.399><c> have</c><00:00:38.640><c> an</c><00:00:38.800><c> interval</c><00:00:39.600><c> 1</c><00:00:40.079><c> 3</c><00:00:40.640><c> and</c>

00:00:40.950 --> 00:00:40.960 align:start position:0%
we see we have an interval 1 3 and
 

00:00:40.960 --> 00:00:44.790 align:start position:0%
we see we have an interval 1 3 and
2<00:00:41.680><c> 6.</c><00:00:42.320><c> so</c><00:00:42.800><c> these</c><00:00:43.120><c> two</c><00:00:43.440><c> are</c><00:00:43.680><c> overlapping</c><00:00:44.480><c> we</c><00:00:44.559><c> can</c>

00:00:44.790 --> 00:00:44.800 align:start position:0%
2 6. so these two are overlapping we can
 

00:00:44.800 --> 00:00:46.069 align:start position:0%
2 6. so these two are overlapping we can
merge<00:00:45.120><c> them</c><00:00:45.440><c> into</c><00:00:45.760><c> one</c>

00:00:46.069 --> 00:00:46.079 align:start position:0%
merge them into one
 

00:00:46.079 --> 00:00:49.830 align:start position:0%
merge them into one
interval<00:00:46.960><c> 1</c><00:00:47.920><c> 6.</c><00:00:48.559><c> the</c><00:00:48.800><c> remaining</c><00:00:49.520><c> two</c>

00:00:49.830 --> 00:00:49.840 align:start position:0%
interval 1 6. the remaining two
 

00:00:49.840 --> 00:00:50.709 align:start position:0%
interval 1 6. the remaining two
intervals

00:00:50.709 --> 00:00:50.719 align:start position:0%
intervals
 

00:00:50.719 --> 00:00:54.470 align:start position:0%
intervals
are<00:00:51.640><c> non-overlapping</c><00:00:52.800><c> so</c><00:00:53.440><c> they</c><00:00:53.680><c> do</c><00:00:53.920><c> not</c><00:00:54.160><c> get</c>

00:00:54.470 --> 00:00:54.480 align:start position:0%
are non-overlapping so they do not get
 

00:00:54.480 --> 00:00:57.590 align:start position:0%
are non-overlapping so they do not get
merged<00:00:55.280><c> and</c><00:00:55.520><c> then</c><00:00:56.000><c> we</c><00:00:56.239><c> see</c><00:00:56.800><c> that</c><00:00:57.199><c> the</c>

00:00:57.590 --> 00:00:57.600 align:start position:0%
merged and then we see that the
 

00:00:57.600 --> 00:01:00.869 align:start position:0%
merged and then we see that the
output<00:00:58.160><c> has</c><00:00:58.800><c> three</c><00:00:59.199><c> on</c><00:00:59.440><c> intervals</c><00:01:00.320><c> one</c>

00:01:00.869 --> 00:01:00.879 align:start position:0%
output has three on intervals one
 

00:01:00.879 --> 00:01:03.750 align:start position:0%
output has three on intervals one
that<00:01:01.120><c> we</c><00:01:01.600><c> had</c><00:01:01.760><c> to</c><00:01:02.000><c> merge</c><00:01:02.399><c> to</c><00:01:02.800><c> get</c><00:01:03.199><c> and</c><00:01:03.280><c> then</c><00:01:03.520><c> the</c>

00:01:03.750 --> 00:01:03.760 align:start position:0%
that we had to merge to get and then the
 

00:01:03.760 --> 00:01:04.229 align:start position:0%
that we had to merge to get and then the
two

00:01:04.229 --> 00:01:04.239 align:start position:0%
two
 

00:01:04.239 --> 00:01:06.789 align:start position:0%
two
original<00:01:05.119><c> and</c><00:01:05.360><c> this</c><00:01:05.600><c> second</c><00:01:06.000><c> example</c><00:01:06.479><c> just</c>

00:01:06.789 --> 00:01:06.799 align:start position:0%
original and this second example just
 

00:01:06.799 --> 00:01:09.510 align:start position:0%
original and this second example just
basically<00:01:07.360><c> clarifies</c><00:01:08.240><c> that</c><00:01:08.560><c> if</c><00:01:08.799><c> we</c><00:01:08.960><c> have</c><00:01:09.200><c> one</c>

00:01:09.510 --> 00:01:09.520 align:start position:0%
basically clarifies that if we have one
 

00:01:09.520 --> 00:01:12.390 align:start position:0%
basically clarifies that if we have one
interval<00:01:10.080><c> one</c><00:01:10.479><c> four</c><00:01:11.119><c> and</c><00:01:11.280><c> a</c><00:01:11.439><c> second</c><00:01:11.760><c> interval</c>

00:01:12.390 --> 00:01:12.400 align:start position:0%
interval one four and a second interval
 

00:01:12.400 --> 00:01:12.710 align:start position:0%
interval one four and a second interval
four

00:01:12.710 --> 00:01:12.720 align:start position:0%
four
 

00:01:12.720 --> 00:01:14.670 align:start position:0%
four
five<00:01:12.960><c> now</c><00:01:13.200><c> these</c><00:01:13.439><c> aren't</c><00:01:13.920><c> technically</c>

00:01:14.670 --> 00:01:14.680 align:start position:0%
five now these aren't technically
 

00:01:14.680 --> 00:01:15.830 align:start position:0%
five now these aren't technically
overlapping

00:01:15.830 --> 00:01:15.840 align:start position:0%
overlapping
 

00:01:15.840 --> 00:01:18.070 align:start position:0%
overlapping
in<00:01:16.000><c> a</c><00:01:16.080><c> sense</c><00:01:16.479><c> right</c><00:01:16.720><c> like</c><00:01:16.880><c> we</c><00:01:17.040><c> have</c><00:01:17.439><c> one</c><00:01:17.759><c> to</c>

00:01:18.070 --> 00:01:18.080 align:start position:0%
in a sense right like we have one to
 

00:01:18.080 --> 00:01:19.109 align:start position:0%
in a sense right like we have one to
four<00:01:18.720><c> and</c>

00:01:19.109 --> 00:01:19.119 align:start position:0%
four and
 

00:01:19.119 --> 00:01:22.789 align:start position:0%
four and
four<00:01:19.680><c> to</c><00:01:20.080><c> five</c><00:01:20.720><c> so</c><00:01:21.520><c> they</c><00:01:21.759><c> clarify</c><00:01:22.240><c> that</c><00:01:22.479><c> these</c>

00:01:22.789 --> 00:01:22.799 align:start position:0%
four to five so they clarify that these
 

00:01:22.799 --> 00:01:23.590 align:start position:0%
four to five so they clarify that these
two<00:01:23.040><c> actually</c>

00:01:23.590 --> 00:01:23.600 align:start position:0%
two actually
 

00:01:23.600 --> 00:01:26.630 align:start position:0%
two actually
do<00:01:23.920><c> count</c><00:01:24.240><c> as</c><00:01:24.479><c> overlapping</c><00:01:25.439><c> so</c><00:01:25.920><c> what's</c><00:01:26.320><c> a</c>

00:01:26.630 --> 00:01:26.640 align:start position:0%
do count as overlapping so what's a
 

00:01:26.640 --> 00:01:28.950 align:start position:0%
do count as overlapping so what's a
good<00:01:27.200><c> and</c><00:01:27.360><c> efficient</c><00:01:28.000><c> way</c><00:01:28.320><c> to</c><00:01:28.479><c> solve</c><00:01:28.799><c> this</c>

00:01:28.950 --> 00:01:28.960 align:start position:0%
good and efficient way to solve this
 

00:01:28.960 --> 00:01:30.550 align:start position:0%
good and efficient way to solve this
problem<00:01:29.360><c> let's</c><00:01:29.600><c> say</c><00:01:29.840><c> we're</c><00:01:30.079><c> given</c>

00:01:30.550 --> 00:01:30.560 align:start position:0%
problem let's say we're given
 

00:01:30.560 --> 00:01:33.429 align:start position:0%
problem let's say we're given
the<00:01:30.799><c> exact</c><00:01:31.200><c> same</c><00:01:31.840><c> four</c><00:01:32.320><c> intervals</c><00:01:33.119><c> that</c><00:01:33.280><c> we</c>

00:01:33.429 --> 00:01:33.439 align:start position:0%
the exact same four intervals that we
 

00:01:33.439 --> 00:01:35.350 align:start position:0%
the exact same four intervals that we
were<00:01:33.600><c> given</c><00:01:33.920><c> in</c><00:01:34.079><c> the</c><00:01:34.320><c> original</c><00:01:34.720><c> example</c><00:01:35.119><c> but</c>

00:01:35.350 --> 00:01:35.360 align:start position:0%
were given in the original example but
 

00:01:35.360 --> 00:01:35.749 align:start position:0%
were given in the original example but
notice

00:01:35.749 --> 00:01:35.759 align:start position:0%
notice
 

00:01:35.759 --> 00:01:38.149 align:start position:0%
notice
this<00:01:35.920><c> time</c><00:01:36.400><c> they're</c><00:01:36.799><c> out</c><00:01:37.040><c> of</c><00:01:37.280><c> order</c><00:01:37.840><c> this</c><00:01:38.000><c> one</c>

00:01:38.149 --> 00:01:38.159 align:start position:0%
this time they're out of order this one
 

00:01:38.159 --> 00:01:40.069 align:start position:0%
this time they're out of order this one
is<00:01:38.320><c> 1</c><00:01:38.640><c> 3</c><00:01:39.040><c> this</c><00:01:39.280><c> one</c><00:01:39.520><c> is</c><00:01:39.680><c> 8</c>

00:01:40.069 --> 00:01:40.079 align:start position:0%
is 1 3 this one is 8
 

00:01:40.079 --> 00:01:43.830 align:start position:0%
is 1 3 this one is 8
10<00:01:40.720><c> this</c><00:01:40.960><c> is</c><00:01:41.200><c> 2</c><00:01:41.680><c> 6.</c><00:01:42.240><c> it</c><00:01:42.399><c> was</c><00:01:42.560><c> originally</c><00:01:43.360><c> over</c>

00:01:43.830 --> 00:01:43.840 align:start position:0%
10 this is 2 6. it was originally over
 

00:01:43.840 --> 00:01:44.389 align:start position:0%
10 this is 2 6. it was originally over
here

00:01:44.389 --> 00:01:44.399 align:start position:0%
here
 

00:01:44.399 --> 00:01:47.109 align:start position:0%
here
right<00:01:45.119><c> they</c><00:01:45.360><c> had</c><00:01:45.680><c> given</c><00:01:46.000><c> the</c><00:01:46.240><c> input</c><00:01:46.560><c> to</c><00:01:46.720><c> us</c><00:01:46.960><c> in</c>

00:01:47.109 --> 00:01:47.119 align:start position:0%
right they had given the input to us in
 

00:01:47.119 --> 00:01:47.830 align:start position:0%
right they had given the input to us in
sorted

00:01:47.830 --> 00:01:47.840 align:start position:0%
sorted
 

00:01:47.840 --> 00:01:50.230 align:start position:0%
sorted
order<00:01:48.240><c> right</c><00:01:48.640><c> so</c><00:01:48.799><c> that's</c><00:01:49.119><c> kind</c><00:01:49.280><c> of</c><00:01:49.439><c> a</c><00:01:49.680><c> hint</c>

00:01:50.230 --> 00:01:50.240 align:start position:0%
order right so that's kind of a hint
 

00:01:50.240 --> 00:01:52.710 align:start position:0%
order right so that's kind of a hint
that<00:01:50.799><c> it</c><00:01:51.119><c> might</c><00:01:51.360><c> be</c><00:01:51.600><c> helpful</c><00:01:52.079><c> for</c><00:01:52.320><c> us</c>

00:01:52.710 --> 00:01:52.720 align:start position:0%
that it might be helpful for us
 

00:01:52.720 --> 00:01:56.709 align:start position:0%
that it might be helpful for us
to<00:01:53.119><c> keep</c><00:01:53.520><c> our</c><00:01:54.399><c> intervals</c><00:01:55.280><c> in</c><00:01:55.520><c> sorted</c><00:01:56.000><c> order</c>

00:01:56.709 --> 00:01:56.719 align:start position:0%
to keep our intervals in sorted order
 

00:01:56.719 --> 00:01:59.190 align:start position:0%
to keep our intervals in sorted order
but<00:01:57.040><c> what's</c><00:01:57.439><c> a</c><00:01:57.840><c> good</c><00:01:58.159><c> way</c><00:01:58.560><c> to</c><00:01:58.719><c> kind</c><00:01:58.880><c> of</c>

00:01:59.190 --> 00:01:59.200 align:start position:0%
but what's a good way to kind of
 

00:01:59.200 --> 00:02:01.510 align:start position:0%
but what's a good way to kind of
visualize<00:01:59.759><c> what's</c><00:02:00.159><c> actually</c><00:02:00.719><c> going</c><00:02:01.119><c> on</c><00:02:01.360><c> with</c>

00:02:01.510 --> 00:02:01.520 align:start position:0%
visualize what's actually going on with
 

00:02:01.520 --> 00:02:02.310 align:start position:0%
visualize what's actually going on with
these<00:02:01.759><c> intervals</c>

00:02:02.310 --> 00:02:02.320 align:start position:0%
these intervals
 

00:02:02.320 --> 00:02:04.630 align:start position:0%
these intervals
these<00:02:02.719><c> numbers</c><00:02:03.200><c> are</c><00:02:03.280><c> pretty</c><00:02:03.600><c> descriptive</c><00:02:04.479><c> but</c>

00:02:04.630 --> 00:02:04.640 align:start position:0%
these numbers are pretty descriptive but
 

00:02:04.640 --> 00:02:07.270 align:start position:0%
these numbers are pretty descriptive but
it's<00:02:04.880><c> better</c><00:02:05.280><c> to</c><00:02:05.520><c> have</c><00:02:05.759><c> a</c><00:02:05.920><c> picture</c><00:02:06.399><c> to</c><00:02:06.560><c> look</c><00:02:06.799><c> at</c>

00:02:07.270 --> 00:02:07.280 align:start position:0%
it's better to have a picture to look at
 

00:02:07.280 --> 00:02:10.070 align:start position:0%
it's better to have a picture to look at
so<00:02:07.520><c> i'm</c><00:02:07.759><c> gonna</c><00:02:08.000><c> draw</c><00:02:08.399><c> a</c><00:02:08.800><c> number</c><00:02:09.280><c> line</c><00:02:09.679><c> and</c>

00:02:10.070 --> 00:02:10.080 align:start position:0%
so i'm gonna draw a number line and
 

00:02:10.080 --> 00:02:10.630 align:start position:0%
so i'm gonna draw a number line and
we're<00:02:10.239><c> gonna</c>

00:02:10.630 --> 00:02:10.640 align:start position:0%
we're gonna
 

00:02:10.640 --> 00:02:12.949 align:start position:0%
we're gonna
start<00:02:11.039><c> at</c><00:02:11.360><c> zero</c><00:02:11.840><c> because</c><00:02:12.080><c> they</c><00:02:12.239><c> clarify</c><00:02:12.800><c> for</c>

00:02:12.949 --> 00:02:12.959 align:start position:0%
start at zero because they clarify for
 

00:02:12.959 --> 00:02:14.229 align:start position:0%
start at zero because they clarify for
us<00:02:13.280><c> in</c><00:02:13.440><c> the</c><00:02:13.599><c> problem</c>

00:02:14.229 --> 00:02:14.239 align:start position:0%
us in the problem
 

00:02:14.239 --> 00:02:16.630 align:start position:0%
us in the problem
that<00:02:14.560><c> any</c><00:02:14.879><c> interval</c><00:02:15.520><c> is</c><00:02:15.680><c> not</c><00:02:15.840><c> gonna</c><00:02:16.080><c> start</c><00:02:16.400><c> at</c>

00:02:16.630 --> 00:02:16.640 align:start position:0%
that any interval is not gonna start at
 

00:02:16.640 --> 00:02:18.790 align:start position:0%
that any interval is not gonna start at
like<00:02:16.959><c> a</c><00:02:17.200><c> negative</c><00:02:17.599><c> value</c><00:02:18.000><c> so</c><00:02:18.239><c> we</c><00:02:18.400><c> can</c>

00:02:18.790 --> 00:02:18.800 align:start position:0%
like a negative value so we can
 

00:02:18.800 --> 00:02:21.430 align:start position:0%
like a negative value so we can
start<00:02:19.120><c> at</c><00:02:19.280><c> zero</c><00:02:19.840><c> so</c><00:02:20.239><c> let's</c><00:02:20.560><c> just</c><00:02:20.879><c> start</c>

00:02:21.430 --> 00:02:21.440 align:start position:0%
start at zero so let's just start
 

00:02:21.440 --> 00:02:22.309 align:start position:0%
start at zero so let's just start
putting<00:02:21.840><c> these</c>

00:02:22.309 --> 00:02:22.319 align:start position:0%
putting these
 

00:02:22.319 --> 00:02:25.190 align:start position:0%
putting these
intervals<00:02:23.040><c> into</c><00:02:23.520><c> our</c><00:02:23.840><c> number</c><00:02:24.239><c> line</c><00:02:24.480><c> and</c><00:02:24.720><c> see</c>

00:02:25.190 --> 00:02:25.200 align:start position:0%
intervals into our number line and see
 

00:02:25.200 --> 00:02:26.229 align:start position:0%
intervals into our number line and see
what<00:02:25.440><c> happens</c>

00:02:26.229 --> 00:02:26.239 align:start position:0%
what happens
 

00:02:26.239 --> 00:02:29.510 align:start position:0%
what happens
so<00:02:26.400><c> we</c><00:02:26.560><c> have</c><00:02:26.959><c> one</c><00:02:27.520><c> three</c><00:02:28.080><c> so</c><00:02:28.879><c> i'm</c><00:02:29.040><c> gonna</c>

00:02:29.510 --> 00:02:29.520 align:start position:0%
so we have one three so i'm gonna
 

00:02:29.520 --> 00:02:32.710 align:start position:0%
so we have one three so i'm gonna
have<00:02:30.080><c> a</c><00:02:30.720><c> line</c><00:02:31.120><c> going</c><00:02:31.519><c> from</c><00:02:31.920><c> one</c>

00:02:32.710 --> 00:02:32.720 align:start position:0%
have a line going from one
 

00:02:32.720 --> 00:02:35.430 align:start position:0%
have a line going from one
going<00:02:32.959><c> from</c><00:02:33.360><c> one</c><00:02:34.000><c> to</c><00:02:34.400><c> three</c><00:02:34.800><c> which</c><00:02:35.040><c> is</c><00:02:35.200><c> over</c>

00:02:35.430 --> 00:02:35.440 align:start position:0%
going from one to three which is over
 

00:02:35.440 --> 00:02:35.990 align:start position:0%
going from one to three which is over
here

00:02:35.990 --> 00:02:36.000 align:start position:0%
here
 

00:02:36.000 --> 00:02:38.949 align:start position:0%
here
so<00:02:36.239><c> this</c><00:02:36.480><c> interval</c><00:02:36.959><c> is</c><00:02:37.360><c> length</c><00:02:37.840><c> 2.</c><00:02:38.400><c> we'll</c><00:02:38.560><c> have</c>

00:02:38.949 --> 00:02:38.959 align:start position:0%
so this interval is length 2. we'll have
 

00:02:38.959 --> 00:02:40.470 align:start position:0%
so this interval is length 2. we'll have
an<00:02:39.200><c> interval</c><00:02:39.680><c> going</c><00:02:40.000><c> from</c>

00:02:40.470 --> 00:02:40.480 align:start position:0%
an interval going from
 

00:02:40.480 --> 00:02:43.670 align:start position:0%
an interval going from
8<00:02:40.959><c> to</c><00:02:41.200><c> 10</c><00:02:41.920><c> another</c><00:02:42.480><c> interval</c><00:02:42.959><c> of</c><00:02:43.200><c> length</c>

00:02:43.670 --> 00:02:43.680 align:start position:0%
8 to 10 another interval of length
 

00:02:43.680 --> 00:02:47.190 align:start position:0%
8 to 10 another interval of length
2.<00:02:44.239><c> we'll</c><00:02:44.400><c> have</c><00:02:44.560><c> an</c><00:02:44.720><c> interval</c><00:02:45.200><c> from</c><00:02:45.599><c> 15</c><00:02:46.160><c> to</c><00:02:46.319><c> 18</c>

00:02:47.190 --> 00:02:47.200 align:start position:0%
2. we'll have an interval from 15 to 18
 

00:02:47.200 --> 00:02:50.550 align:start position:0%
2. we'll have an interval from 15 to 18
and<00:02:47.599><c> the</c><00:02:47.760><c> last</c><00:02:48.080><c> interval</c><00:02:48.640><c> is</c><00:02:48.879><c> from</c><00:02:49.280><c> two</c><00:02:49.680><c> to</c><00:02:49.920><c> six</c>

00:02:50.550 --> 00:02:50.560 align:start position:0%
and the last interval is from two to six
 

00:02:50.560 --> 00:02:53.750 align:start position:0%
and the last interval is from two to six
so<00:02:50.959><c> notice</c><00:02:51.599><c> this</c><00:02:51.920><c> time</c><00:02:52.480><c> we</c><00:02:52.800><c> actually</c><00:02:53.200><c> do</c><00:02:53.440><c> have</c>

00:02:53.750 --> 00:02:53.760 align:start position:0%
so notice this time we actually do have
 

00:02:53.760 --> 00:02:54.150 align:start position:0%
so notice this time we actually do have
an

00:02:54.150 --> 00:02:54.160 align:start position:0%
an
 

00:02:54.160 --> 00:02:57.350 align:start position:0%
an
overlapping<00:02:55.040><c> interval</c><00:02:56.080><c> two</c><00:02:56.480><c> to</c><00:02:56.800><c> six</c>

00:02:57.350 --> 00:02:57.360 align:start position:0%
overlapping interval two to six
 

00:02:57.360 --> 00:03:00.229 align:start position:0%
overlapping interval two to six
so<00:02:57.599><c> i'm</c><00:02:57.840><c> gonna</c><00:02:58.080><c> draw</c><00:02:58.400><c> it</c><00:02:58.800><c> above</c><00:02:59.760><c> so</c><00:02:59.920><c> i'm</c><00:03:00.000><c> gonna</c>

00:03:00.229 --> 00:03:00.239 align:start position:0%
so i'm gonna draw it above so i'm gonna
 

00:03:00.239 --> 00:03:00.869 align:start position:0%
so i'm gonna draw it above so i'm gonna
draw<00:03:00.560><c> it</c>

00:03:00.869 --> 00:03:00.879 align:start position:0%
draw it
 

00:03:00.879 --> 00:03:03.030 align:start position:0%
draw it
where<00:03:01.120><c> it's</c><00:03:01.680><c> obvious</c><00:03:02.239><c> that</c><00:03:02.400><c> we</c><00:03:02.480><c> have</c><00:03:02.720><c> two</c>

00:03:03.030 --> 00:03:03.040 align:start position:0%
where it's obvious that we have two
 

00:03:03.040 --> 00:03:04.030 align:start position:0%
where it's obvious that we have two
intervals<00:03:03.519><c> that</c><00:03:03.760><c> are</c>

00:03:04.030 --> 00:03:04.040 align:start position:0%
intervals that are
 

00:03:04.040 --> 00:03:06.790 align:start position:0%
intervals that are
overlapping<00:03:05.280><c> now</c><00:03:05.519><c> when</c><00:03:05.680><c> you</c><00:03:05.920><c> actually</c><00:03:06.400><c> draw</c>

00:03:06.790 --> 00:03:06.800 align:start position:0%
overlapping now when you actually draw
 

00:03:06.800 --> 00:03:08.229 align:start position:0%
overlapping now when you actually draw
out<00:03:07.120><c> the</c><00:03:07.280><c> number</c><00:03:07.680><c> line</c>

00:03:08.229 --> 00:03:08.239 align:start position:0%
out the number line
 

00:03:08.239 --> 00:03:11.430 align:start position:0%
out the number line
it<00:03:08.560><c> kind</c><00:03:08.879><c> of</c><00:03:09.120><c> becomes</c><00:03:09.760><c> obvious</c><00:03:10.720><c> that</c>

00:03:11.430 --> 00:03:11.440 align:start position:0%
it kind of becomes obvious that
 

00:03:11.440 --> 00:03:14.229 align:start position:0%
it kind of becomes obvious that
it<00:03:11.599><c> would</c><00:03:11.760><c> be</c><00:03:12.000><c> very</c><00:03:12.400><c> helpful</c><00:03:12.800><c> for</c><00:03:13.040><c> us</c><00:03:13.280><c> to</c><00:03:13.519><c> take</c>

00:03:14.229 --> 00:03:14.239 align:start position:0%
it would be very helpful for us to take
 

00:03:14.239 --> 00:03:14.790 align:start position:0%
it would be very helpful for us to take
these

00:03:14.790 --> 00:03:14.800 align:start position:0%
these
 

00:03:14.800 --> 00:03:18.470 align:start position:0%
these
intervals<00:03:15.840><c> and</c><00:03:16.159><c> sort</c><00:03:16.560><c> them</c><00:03:17.280><c> based</c><00:03:17.760><c> on</c>

00:03:18.470 --> 00:03:18.480 align:start position:0%
intervals and sort them based on
 

00:03:18.480 --> 00:03:21.910 align:start position:0%
intervals and sort them based on
the<00:03:18.879><c> start</c><00:03:19.599><c> value</c><00:03:20.000><c> we</c><00:03:20.159><c> don't</c><00:03:20.400><c> care</c><00:03:20.959><c> so</c><00:03:21.360><c> much</c>

00:03:21.910 --> 00:03:21.920 align:start position:0%
the start value we don't care so much
 

00:03:21.920 --> 00:03:25.910 align:start position:0%
the start value we don't care so much
about<00:03:22.319><c> the</c><00:03:22.640><c> end</c><00:03:22.879><c> value</c><00:03:23.840><c> because</c><00:03:24.239><c> we</c><00:03:24.640><c> want</c><00:03:24.959><c> to</c>

00:03:25.910 --> 00:03:25.920 align:start position:0%
about the end value because we want to
 

00:03:25.920 --> 00:03:28.949 align:start position:0%
about the end value because we want to
go<00:03:26.480><c> through</c><00:03:27.040><c> our</c><00:03:27.360><c> number</c><00:03:27.760><c> line</c><00:03:28.159><c> starting</c>

00:03:28.949 --> 00:03:28.959 align:start position:0%
go through our number line starting
 

00:03:28.959 --> 00:03:31.589 align:start position:0%
go through our number line starting
at<00:03:29.120><c> the</c><00:03:29.280><c> beginning</c><00:03:30.159><c> starting</c><00:03:30.560><c> at</c><00:03:30.720><c> the</c><00:03:31.040><c> start</c>

00:03:31.589 --> 00:03:31.599 align:start position:0%
at the beginning starting at the start
 

00:03:31.599 --> 00:03:32.470 align:start position:0%
at the beginning starting at the start
value

00:03:32.470 --> 00:03:32.480 align:start position:0%
value
 

00:03:32.480 --> 00:03:35.509 align:start position:0%
value
going<00:03:32.799><c> to</c><00:03:33.040><c> the</c><00:03:33.280><c> next</c><00:03:33.599><c> start</c><00:03:34.000><c> value</c><00:03:34.959><c> going</c><00:03:35.360><c> to</c>

00:03:35.509 --> 00:03:35.519 align:start position:0%
going to the next start value going to
 

00:03:35.519 --> 00:03:37.509 align:start position:0%
going to the next start value going to
the<00:03:35.680><c> next</c><00:03:36.000><c> start</c><00:03:36.239><c> value</c><00:03:36.560><c> and</c><00:03:36.640><c> then</c><00:03:36.879><c> continuing</c>

00:03:37.509 --> 00:03:37.519 align:start position:0%
the next start value and then continuing
 

00:03:37.519 --> 00:03:37.990 align:start position:0%
the next start value and then continuing
that

00:03:37.990 --> 00:03:38.000 align:start position:0%
that
 

00:03:38.000 --> 00:03:41.030 align:start position:0%
that
because<00:03:38.799><c> this</c><00:03:39.200><c> allows</c><00:03:39.680><c> us</c><00:03:40.080><c> to</c><00:03:40.319><c> detect</c>

00:03:41.030 --> 00:03:41.040 align:start position:0%
because this allows us to detect
 

00:03:41.040 --> 00:03:43.509 align:start position:0%
because this allows us to detect
so<00:03:41.280><c> for</c><00:03:41.440><c> example</c><00:03:41.920><c> we</c><00:03:42.159><c> look</c><00:03:42.400><c> at</c><00:03:42.720><c> this</c><00:03:43.040><c> interval</c>

00:03:43.509 --> 00:03:43.519 align:start position:0%
so for example we look at this interval
 

00:03:43.519 --> 00:03:45.030 align:start position:0%
so for example we look at this interval
first<00:03:43.920><c> we</c><00:03:44.080><c> know</c><00:03:44.319><c> it</c><00:03:44.400><c> goes</c>

00:03:45.030 --> 00:03:45.040 align:start position:0%
first we know it goes
 

00:03:45.040 --> 00:03:48.550 align:start position:0%
first we know it goes
from<00:03:45.360><c> one</c><00:03:45.599><c> to</c><00:03:45.840><c> three</c><00:03:47.200><c> next</c><00:03:47.840><c> we</c><00:03:48.080><c> look</c>

00:03:48.550 --> 00:03:48.560 align:start position:0%
from one to three next we look
 

00:03:48.560 --> 00:03:51.589 align:start position:0%
from one to three next we look
at<00:03:48.799><c> the</c><00:03:49.120><c> second</c><00:03:49.599><c> interval</c><00:03:50.239><c> it</c><00:03:50.480><c> goes</c><00:03:51.040><c> from</c>

00:03:51.589 --> 00:03:51.599 align:start position:0%
at the second interval it goes from
 

00:03:51.599 --> 00:03:54.710 align:start position:0%
at the second interval it goes from
two<00:03:52.239><c> to</c><00:03:52.640><c> six</c><00:03:53.360><c> and</c><00:03:53.680><c> since</c><00:03:54.000><c> we</c><00:03:54.159><c> just</c><00:03:54.400><c> looked</c><00:03:54.640><c> at</c>

00:03:54.710 --> 00:03:54.720 align:start position:0%
two to six and since we just looked at
 

00:03:54.720 --> 00:03:56.229 align:start position:0%
two to six and since we just looked at
the<00:03:54.959><c> previous</c><00:03:55.680><c> interval</c>

00:03:56.229 --> 00:03:56.239 align:start position:0%
the previous interval
 

00:03:56.239 --> 00:04:00.390 align:start position:0%
the previous interval
over<00:03:56.480><c> here</c><00:03:57.120><c> we</c><00:03:57.519><c> know</c><00:03:58.159><c> that</c><00:03:58.480><c> this</c><00:03:58.720><c> one</c><00:03:59.200><c> overlaps</c>

00:04:00.390 --> 00:04:00.400 align:start position:0%
over here we know that this one overlaps
 

00:04:00.400 --> 00:04:02.789 align:start position:0%
over here we know that this one overlaps
with<00:04:00.640><c> this</c><00:04:00.879><c> one</c><00:04:01.439><c> so</c><00:04:01.599><c> what</c><00:04:01.760><c> are</c><00:04:01.840><c> we</c><00:04:02.000><c> going</c><00:04:02.080><c> to</c><00:04:02.239><c> do</c>

00:04:02.789 --> 00:04:02.799 align:start position:0%
with this one so what are we going to do
 

00:04:02.799 --> 00:04:03.990 align:start position:0%
with this one so what are we going to do
we're<00:04:02.959><c> going</c><00:04:03.040><c> to</c><00:04:03.200><c> merge</c><00:04:03.599><c> them</c>

00:04:03.990 --> 00:04:04.000 align:start position:0%
we're going to merge them
 

00:04:04.000 --> 00:04:07.270 align:start position:0%
we're going to merge them
together<00:04:04.959><c> into</c><00:04:05.519><c> a</c><00:04:05.840><c> new</c><00:04:06.720><c> interval</c>

00:04:07.270 --> 00:04:07.280 align:start position:0%
together into a new interval
 

00:04:07.280 --> 00:04:10.470 align:start position:0%
together into a new interval
so<00:04:07.519><c> it</c><00:04:07.920><c> results</c><00:04:08.560><c> in</c><00:04:08.799><c> a</c><00:04:08.959><c> new</c><00:04:09.200><c> interval</c><00:04:09.680><c> from</c>

00:04:10.470 --> 00:04:10.480 align:start position:0%
so it results in a new interval from
 

00:04:10.480 --> 00:04:13.670 align:start position:0%
so it results in a new interval from
1<00:04:11.360><c> to</c><00:04:11.680><c> 6</c><00:04:12.000><c> because</c><00:04:12.239><c> remember</c><00:04:12.879><c> ultimately</c><00:04:13.519><c> we</c>

00:04:13.670 --> 00:04:13.680 align:start position:0%
1 to 6 because remember ultimately we
 

00:04:13.680 --> 00:04:14.550 align:start position:0%
1 to 6 because remember ultimately we
are<00:04:13.920><c> trying</c><00:04:14.239><c> to</c>

00:04:14.550 --> 00:04:14.560 align:start position:0%
are trying to
 

00:04:14.560 --> 00:04:17.590 align:start position:0%
are trying to
merge<00:04:15.280><c> the</c><00:04:15.519><c> intervals</c><00:04:16.239><c> and</c><00:04:16.400><c> then</c><00:04:16.720><c> we</c><00:04:16.959><c> go</c><00:04:17.199><c> to</c>

00:04:17.590 --> 00:04:17.600 align:start position:0%
merge the intervals and then we go to
 

00:04:17.600 --> 00:04:21.189 align:start position:0%
merge the intervals and then we go to
our<00:04:18.239><c> next</c><00:04:19.040><c> starting</c><00:04:19.600><c> position</c><00:04:20.160><c> which</c><00:04:20.560><c> is</c>

00:04:21.189 --> 00:04:21.199 align:start position:0%
our next starting position which is
 

00:04:21.199 --> 00:04:24.790 align:start position:0%
our next starting position which is
a<00:04:21.840><c> so</c><00:04:22.000><c> we</c><00:04:22.160><c> have</c><00:04:22.479><c> an</c><00:04:22.639><c> interval</c><00:04:23.120><c> from</c><00:04:23.600><c> 8</c><00:04:24.000><c> to</c><00:04:24.240><c> 10</c>

00:04:24.790 --> 00:04:24.800 align:start position:0%
a so we have an interval from 8 to 10
 

00:04:24.800 --> 00:04:27.909 align:start position:0%
a so we have an interval from 8 to 10
and<00:04:24.960><c> we</c><00:04:25.199><c> know</c><00:04:25.440><c> it</c><00:04:25.680><c> does</c><00:04:26.080><c> not</c><00:04:26.560><c> merge</c><00:04:27.199><c> with</c><00:04:27.680><c> this</c>

00:04:27.909 --> 00:04:27.919 align:start position:0%
and we know it does not merge with this
 

00:04:27.919 --> 00:04:29.670 align:start position:0%
and we know it does not merge with this
one<00:04:28.240><c> because</c><00:04:28.479><c> they're</c><00:04:28.639><c> non-overlapping</c><00:04:29.600><c> we</c>

00:04:29.670 --> 00:04:29.680 align:start position:0%
one because they're non-overlapping we
 

00:04:29.680 --> 00:04:30.550 align:start position:0%
one because they're non-overlapping we
got<00:04:29.919><c> some</c>

00:04:30.550 --> 00:04:30.560 align:start position:0%
got some
 

00:04:30.560 --> 00:04:34.310 align:start position:0%
got some
space<00:04:31.360><c> over</c><00:04:31.600><c> here</c><00:04:31.919><c> right</c><00:04:32.720><c> lastly</c><00:04:33.280><c> we</c><00:04:33.440><c> go</c><00:04:33.680><c> to</c>

00:04:34.310 --> 00:04:34.320 align:start position:0%
space over here right lastly we go to
 

00:04:34.320 --> 00:04:37.749 align:start position:0%
space over here right lastly we go to
this<00:04:34.800><c> interval</c><00:04:35.520><c> and</c><00:04:35.680><c> it</c><00:04:35.759><c> goes</c><00:04:36.320><c> from</c><00:04:36.800><c> 15</c>

00:04:37.749 --> 00:04:37.759 align:start position:0%
this interval and it goes from 15
 

00:04:37.759 --> 00:04:40.870 align:start position:0%
this interval and it goes from 15
to<00:04:37.919><c> 18</c><00:04:39.040><c> we</c><00:04:39.199><c> know</c><00:04:39.440><c> it</c><00:04:39.520><c> does</c><00:04:39.759><c> not</c><00:04:40.000><c> overlap</c><00:04:40.639><c> with</c>

00:04:40.870 --> 00:04:40.880 align:start position:0%
to 18 we know it does not overlap with
 

00:04:40.880 --> 00:04:41.510 align:start position:0%
to 18 we know it does not overlap with
this<00:04:41.120><c> one</c>

00:04:41.510 --> 00:04:41.520 align:start position:0%
this one
 

00:04:41.520 --> 00:04:44.310 align:start position:0%
this one
there's<00:04:42.000><c> all</c><00:04:42.240><c> this</c><00:04:42.720><c> space</c><00:04:43.199><c> in</c><00:04:43.280><c> between</c><00:04:43.759><c> right</c>

00:04:44.310 --> 00:04:44.320 align:start position:0%
there's all this space in between right
 

00:04:44.320 --> 00:04:46.629 align:start position:0%
there's all this space in between right
so<00:04:44.560><c> just</c><00:04:44.720><c> to</c><00:04:44.880><c> reiterate</c><00:04:45.600><c> we're</c><00:04:45.759><c> going</c><00:04:45.840><c> to</c><00:04:46.000><c> take</c>

00:04:46.629 --> 00:04:46.639 align:start position:0%
so just to reiterate we're going to take
 

00:04:46.639 --> 00:04:49.830 align:start position:0%
so just to reiterate we're going to take
our<00:04:47.040><c> input</c><00:04:47.360><c> list</c><00:04:47.680><c> of</c><00:04:47.919><c> intervals</c><00:04:48.880><c> sort</c>

00:04:49.830 --> 00:04:49.840 align:start position:0%
our input list of intervals sort
 

00:04:49.840 --> 00:04:53.110 align:start position:0%
our input list of intervals sort
by<00:04:50.960><c> the</c><00:04:51.280><c> start</c><00:04:52.000><c> value</c>

00:04:53.110 --> 00:04:53.120 align:start position:0%
by the start value
 

00:04:53.120 --> 00:04:55.430 align:start position:0%
by the start value
of<00:04:53.360><c> each</c><00:04:53.600><c> interval</c><00:04:54.320><c> and</c><00:04:54.639><c> then</c><00:04:54.960><c> we're</c><00:04:55.120><c> gonna</c>

00:04:55.430 --> 00:04:55.440 align:start position:0%
of each interval and then we're gonna
 

00:04:55.440 --> 00:04:57.510 align:start position:0%
of each interval and then we're gonna
iterate<00:04:56.000><c> through</c><00:04:56.320><c> each</c><00:04:56.560><c> start</c><00:04:56.880><c> value</c><00:04:57.280><c> right</c>

00:04:57.510 --> 00:04:57.520 align:start position:0%
iterate through each start value right
 

00:04:57.520 --> 00:04:58.310 align:start position:0%
iterate through each start value right
starting<00:04:57.919><c> at</c>

00:04:58.310 --> 00:04:58.320 align:start position:0%
starting at
 

00:04:58.320 --> 00:05:00.950 align:start position:0%
starting at
the<00:04:58.479><c> first</c><00:04:58.880><c> one</c><00:04:59.360><c> then</c><00:04:59.600><c> the</c><00:04:59.759><c> next</c><00:05:00.080><c> one</c><00:05:00.720><c> then</c>

00:05:00.950 --> 00:05:00.960 align:start position:0%
the first one then the next one then
 

00:05:00.960 --> 00:05:01.830 align:start position:0%
the first one then the next one then
this<00:05:01.199><c> one</c>

00:05:01.830 --> 00:05:01.840 align:start position:0%
this one
 

00:05:01.840 --> 00:05:03.909 align:start position:0%
this one
then<00:05:02.080><c> this</c><00:05:02.400><c> one</c><00:05:02.720><c> and</c><00:05:03.039><c> where</c><00:05:03.360><c> each</c><00:05:03.600><c> time</c><00:05:03.759><c> we're</c>

00:05:03.909 --> 00:05:03.919 align:start position:0%
then this one and where each time we're
 

00:05:03.919 --> 00:05:05.350 align:start position:0%
then this one and where each time we're
going<00:05:04.000><c> to</c><00:05:04.160><c> check</c><00:05:04.479><c> okay</c>

00:05:05.350 --> 00:05:05.360 align:start position:0%
going to check okay
 

00:05:05.360 --> 00:05:07.749 align:start position:0%
going to check okay
does<00:05:06.000><c> the</c><00:05:06.320><c> current</c><00:05:06.720><c> interval</c><00:05:07.120><c> does</c><00:05:07.360><c> the</c><00:05:07.440><c> most</c>

00:05:07.749 --> 00:05:07.759 align:start position:0%
does the current interval does the most
 

00:05:07.759 --> 00:05:08.710 align:start position:0%
does the current interval does the most
recent<00:05:08.160><c> interval</c>

00:05:08.710 --> 00:05:08.720 align:start position:0%
recent interval
 

00:05:08.720 --> 00:05:11.510 align:start position:0%
recent interval
overlap<00:05:09.440><c> with</c><00:05:09.600><c> the</c><00:05:09.919><c> previous</c><00:05:10.560><c> interval</c><00:05:11.199><c> if</c><00:05:11.360><c> it</c>

00:05:11.510 --> 00:05:11.520 align:start position:0%
overlap with the previous interval if it
 

00:05:11.520 --> 00:05:12.950 align:start position:0%
overlap with the previous interval if it
doesn't<00:05:11.919><c> we</c><00:05:12.080><c> don't</c><00:05:12.320><c> do</c><00:05:12.479><c> anything</c>

00:05:12.950 --> 00:05:12.960 align:start position:0%
doesn't we don't do anything
 

00:05:12.960 --> 00:05:16.950 align:start position:0%
doesn't we don't do anything
if<00:05:13.120><c> it</c><00:05:13.520><c> does</c><00:05:14.320><c> which</c><00:05:14.560><c> it</c><00:05:14.720><c> did</c><00:05:15.360><c> in</c><00:05:15.840><c> this</c><00:05:16.160><c> case</c>

00:05:16.950 --> 00:05:16.960 align:start position:0%
if it does which it did in this case
 

00:05:16.960 --> 00:05:20.790 align:start position:0%
if it does which it did in this case
then<00:05:17.360><c> we</c><00:05:17.520><c> can</c><00:05:17.919><c> merge</c><00:05:18.320><c> them</c><00:05:18.720><c> into</c><00:05:19.520><c> one</c><00:05:19.919><c> interval</c>

00:05:20.790 --> 00:05:20.800 align:start position:0%
then we can merge them into one interval
 

00:05:20.800 --> 00:05:23.830 align:start position:0%
then we can merge them into one interval
now<00:05:21.039><c> it</c><00:05:21.360><c> might</c><00:05:21.840><c> seem</c><00:05:22.400><c> unnecessary</c><00:05:23.360><c> to</c><00:05:23.520><c> even</c>

00:05:23.830 --> 00:05:23.840 align:start position:0%
now it might seem unnecessary to even
 

00:05:23.840 --> 00:05:25.670 align:start position:0%
now it might seem unnecessary to even
have<00:05:24.080><c> a</c><00:05:24.240><c> picture</c><00:05:24.560><c> like</c><00:05:24.720><c> this</c><00:05:24.960><c> because</c>

00:05:25.670 --> 00:05:25.680 align:start position:0%
have a picture like this because
 

00:05:25.680 --> 00:05:27.590 align:start position:0%
have a picture like this because
this<00:05:26.080><c> interval</c><00:05:26.560><c> problem</c><00:05:26.960><c> is</c><00:05:27.120><c> actually</c>

00:05:27.590 --> 00:05:27.600 align:start position:0%
this interval problem is actually
 

00:05:27.600 --> 00:05:29.590 align:start position:0%
this interval problem is actually
straightforward<00:05:28.479><c> right</c><00:05:28.720><c> we</c><00:05:28.880><c> just</c><00:05:29.120><c> sort</c><00:05:29.520><c> and</c>

00:05:29.590 --> 00:05:29.600 align:start position:0%
straightforward right we just sort and
 

00:05:29.600 --> 00:05:31.189 align:start position:0%
straightforward right we just sort and
then<00:05:29.759><c> we</c><00:05:29.919><c> merge</c><00:05:30.240><c> the</c><00:05:30.400><c> intervals</c>

00:05:31.189 --> 00:05:31.199 align:start position:0%
then we merge the intervals
 

00:05:31.199 --> 00:05:33.270 align:start position:0%
then we merge the intervals
but<00:05:31.440><c> there</c><00:05:31.759><c> are</c><00:05:31.919><c> a</c><00:05:32.080><c> lot</c><00:05:32.320><c> more</c><00:05:32.639><c> difficult</c>

00:05:33.270 --> 00:05:33.280 align:start position:0%
but there are a lot more difficult
 

00:05:33.280 --> 00:05:34.230 align:start position:0%
but there are a lot more difficult
interval<00:05:33.759><c> problems</c>

00:05:34.230 --> 00:05:34.240 align:start position:0%
interval problems
 

00:05:34.240 --> 00:05:36.710 align:start position:0%
interval problems
where<00:05:34.400><c> i'm</c><00:05:34.720><c> telling</c><00:05:35.120><c> you</c><00:05:35.600><c> drawing</c><00:05:36.080><c> a</c><00:05:36.320><c> picture</c>

00:05:36.710 --> 00:05:36.720 align:start position:0%
where i'm telling you drawing a picture
 

00:05:36.720 --> 00:05:37.270 align:start position:0%
where i'm telling you drawing a picture
like<00:05:36.880><c> this</c>

00:05:37.270 --> 00:05:37.280 align:start position:0%
like this
 

00:05:37.280 --> 00:05:39.670 align:start position:0%
like this
drawing<00:05:37.680><c> a</c><00:05:38.000><c> number</c><00:05:38.400><c> line</c><00:05:38.880><c> to</c><00:05:39.120><c> understand</c>

00:05:39.670 --> 00:05:39.680 align:start position:0%
drawing a number line to understand
 

00:05:39.680 --> 00:05:40.870 align:start position:0%
drawing a number line to understand
what's<00:05:40.080><c> actually</c><00:05:40.479><c> going</c>

00:05:40.870 --> 00:05:40.880 align:start position:0%
what's actually going
 

00:05:40.880 --> 00:05:43.430 align:start position:0%
what's actually going
on<00:05:41.440><c> makes</c><00:05:41.759><c> the</c><00:05:42.000><c> problem</c><00:05:42.479><c> a</c><00:05:42.639><c> lot</c><00:05:42.960><c> easier</c><00:05:43.280><c> to</c>

00:05:43.430 --> 00:05:43.440 align:start position:0%
on makes the problem a lot easier to
 

00:05:43.440 --> 00:05:44.230 align:start position:0%
on makes the problem a lot easier to
solve

00:05:44.230 --> 00:05:44.240 align:start position:0%
solve
 

00:05:44.240 --> 00:05:46.469 align:start position:0%
solve
so<00:05:44.400><c> now</c><00:05:44.639><c> let's</c><00:05:44.880><c> write</c><00:05:45.039><c> the</c><00:05:45.280><c> code</c><00:05:45.759><c> remember</c><00:05:46.240><c> we</c>

00:05:46.469 --> 00:05:46.479 align:start position:0%
so now let's write the code remember we
 

00:05:46.479 --> 00:05:48.469 align:start position:0%
so now let's write the code remember we
are<00:05:46.720><c> sorting</c><00:05:47.199><c> the</c><00:05:47.440><c> entire</c><00:05:47.919><c> input</c>

00:05:48.469 --> 00:05:48.479 align:start position:0%
are sorting the entire input
 

00:05:48.479 --> 00:05:50.550 align:start position:0%
are sorting the entire input
so<00:05:48.880><c> the</c><00:05:49.280><c> and</c><00:05:49.360><c> then</c><00:05:49.600><c> iterating</c><00:05:50.080><c> through</c><00:05:50.320><c> the</c>

00:05:50.550 --> 00:05:50.560 align:start position:0%
so the and then iterating through the
 

00:05:50.560 --> 00:05:51.510 align:start position:0%
so the and then iterating through the
input<00:05:50.880><c> so</c><00:05:51.199><c> the</c>

00:05:51.510 --> 00:05:51.520 align:start position:0%
input so the
 

00:05:51.520 --> 00:05:54.469 align:start position:0%
input so the
time<00:05:51.759><c> complexity</c><00:05:52.479><c> is</c><00:05:52.720><c> going</c><00:05:52.960><c> to</c><00:05:53.039><c> be</c><00:05:53.280><c> big</c><00:05:53.520><c> o</c><00:05:54.000><c> n</c>

00:05:54.469 --> 00:05:54.479 align:start position:0%
time complexity is going to be big o n
 

00:05:54.479 --> 00:05:55.350 align:start position:0%
time complexity is going to be big o n
log<00:05:54.880><c> n</c>

00:05:55.350 --> 00:05:55.360 align:start position:0%
log n
 

00:05:55.360 --> 00:05:57.749 align:start position:0%
log n
where<00:05:55.680><c> n</c><00:05:56.000><c> is</c><00:05:56.160><c> the</c><00:05:56.560><c> number</c><00:05:56.960><c> of</c><00:05:57.199><c> intervals</c><00:05:57.600><c> that</c>

00:05:57.749 --> 00:05:57.759 align:start position:0%
where n is the number of intervals that
 

00:05:57.759 --> 00:05:58.469 align:start position:0%
where n is the number of intervals that
we're<00:05:58.000><c> given</c>

00:05:58.469 --> 00:05:58.479 align:start position:0%
we're given
 

00:05:58.479 --> 00:06:01.110 align:start position:0%
we're given
so<00:05:58.720><c> thankfully</c><00:05:59.280><c> for</c><00:05:59.600><c> us</c><00:05:59.919><c> in</c><00:06:00.240><c> python</c><00:06:00.800><c> it's</c>

00:06:01.110 --> 00:06:01.120 align:start position:0%
so thankfully for us in python it's
 

00:06:01.120 --> 00:06:02.710 align:start position:0%
so thankfully for us in python it's
pretty<00:06:01.360><c> straightforward</c><00:06:02.000><c> to</c><00:06:02.240><c> sort</c><00:06:02.479><c> we</c><00:06:02.639><c> can</c>

00:06:02.710 --> 00:06:02.720 align:start position:0%
pretty straightforward to sort we can
 

00:06:02.720 --> 00:06:03.189 align:start position:0%
pretty straightforward to sort we can
just<00:06:02.880><c> take</c>

00:06:03.189 --> 00:06:03.199 align:start position:0%
just take
 

00:06:03.199 --> 00:06:05.590 align:start position:0%
just take
interval<00:06:03.840><c> sort</c><00:06:04.400><c> and</c><00:06:04.639><c> what's</c><00:06:04.960><c> the</c><00:06:05.199><c> key</c><00:06:05.440><c> we're</c>

00:06:05.590 --> 00:06:05.600 align:start position:0%
interval sort and what's the key we're
 

00:06:05.600 --> 00:06:07.350 align:start position:0%
interval sort and what's the key we're
sorting<00:06:06.000><c> by</c><00:06:06.240><c> because</c><00:06:06.560><c> remember</c><00:06:07.039><c> we're</c>

00:06:07.350 --> 00:06:07.360 align:start position:0%
sorting by because remember we're
 

00:06:07.360 --> 00:06:08.710 align:start position:0%
sorting by because remember we're
sorting<00:06:07.919><c> a</c><00:06:08.160><c> list</c>

00:06:08.710 --> 00:06:08.720 align:start position:0%
sorting a list
 

00:06:08.720 --> 00:06:12.230 align:start position:0%
sorting a list
of<00:06:09.199><c> pairs</c><00:06:10.080><c> so</c><00:06:10.319><c> the</c><00:06:10.479><c> key</c><00:06:10.960><c> is</c><00:06:11.120><c> going</c><00:06:11.360><c> to</c><00:06:11.520><c> be</c><00:06:11.759><c> a</c>

00:06:12.230 --> 00:06:12.240 align:start position:0%
of pairs so the key is going to be a
 

00:06:12.240 --> 00:06:15.350 align:start position:0%
of pairs so the key is going to be a
in<00:06:12.479><c> python</c><00:06:12.880><c> a</c><00:06:13.120><c> lambda</c><00:06:13.520><c> function</c><00:06:14.240><c> so</c><00:06:15.039><c> in</c><00:06:15.120><c> this</c>

00:06:15.350 --> 00:06:15.360 align:start position:0%
in python a lambda function so in this
 

00:06:15.360 --> 00:06:15.909 align:start position:0%
in python a lambda function so in this
case

00:06:15.909 --> 00:06:15.919 align:start position:0%
case
 

00:06:15.919 --> 00:06:19.110 align:start position:0%
case
i<00:06:16.400><c> is</c><00:06:16.479><c> going</c><00:06:16.639><c> to</c><00:06:16.720><c> stand</c><00:06:17.199><c> for</c><00:06:17.440><c> the</c><00:06:17.680><c> interval</c><00:06:18.479><c> and</c>

00:06:19.110 --> 00:06:19.120 align:start position:0%
i is going to stand for the interval and
 

00:06:19.120 --> 00:06:21.350 align:start position:0%
i is going to stand for the interval and
what<00:06:19.759><c> value</c><00:06:20.240><c> of</c><00:06:20.400><c> this</c><00:06:20.639><c> interval</c><00:06:21.039><c> are</c><00:06:21.120><c> we</c><00:06:21.280><c> going</c>

00:06:21.350 --> 00:06:21.360 align:start position:0%
what value of this interval are we going
 

00:06:21.360 --> 00:06:22.870 align:start position:0%
what value of this interval are we going
to<00:06:21.440><c> use</c><00:06:21.680><c> we're</c><00:06:21.840><c> going</c><00:06:21.919><c> to</c><00:06:22.000><c> use</c><00:06:22.240><c> the</c><00:06:22.479><c> first</c>

00:06:22.870 --> 00:06:22.880 align:start position:0%
to use we're going to use the first
 

00:06:22.880 --> 00:06:24.070 align:start position:0%
to use we're going to use the first
value<00:06:23.199><c> so</c><00:06:23.360><c> at</c><00:06:23.600><c> index</c>

00:06:24.070 --> 00:06:24.080 align:start position:0%
value so at index
 

00:06:24.080 --> 00:06:26.309 align:start position:0%
value so at index
0<00:06:24.400><c> we're</c><00:06:24.639><c> sorting</c><00:06:24.960><c> by</c><00:06:25.120><c> the</c><00:06:25.360><c> start</c><00:06:25.680><c> value</c><00:06:26.080><c> if</c><00:06:26.160><c> we</c>

00:06:26.309 --> 00:06:26.319 align:start position:0%
0 we're sorting by the start value if we
 

00:06:26.319 --> 00:06:27.990 align:start position:0%
0 we're sorting by the start value if we
wanted<00:06:26.479><c> to</c><00:06:26.560><c> sort</c><00:06:26.800><c> by</c><00:06:26.960><c> the</c><00:06:27.199><c> end</c><00:06:27.360><c> value</c><00:06:27.759><c> this</c>

00:06:27.990 --> 00:06:28.000 align:start position:0%
wanted to sort by the end value this
 

00:06:28.000 --> 00:06:28.790 align:start position:0%
wanted to sort by the end value this
would<00:06:28.160><c> be</c>

00:06:28.790 --> 00:06:28.800 align:start position:0%
would be
 

00:06:28.800 --> 00:06:30.710 align:start position:0%
would be
i<00:06:29.039><c> of</c><00:06:29.199><c> 1</c><00:06:29.440><c> but</c><00:06:29.680><c> we're</c><00:06:29.840><c> going</c><00:06:29.919><c> to</c><00:06:30.000><c> sort</c><00:06:30.319><c> by</c><00:06:30.479><c> the</c>

00:06:30.710 --> 00:06:30.720 align:start position:0%
i of 1 but we're going to sort by the
 

00:06:30.720 --> 00:06:32.230 align:start position:0%
i of 1 but we're going to sort by the
start<00:06:31.120><c> value</c><00:06:31.600><c> only</c>

00:06:32.230 --> 00:06:32.240 align:start position:0%
start value only
 

00:06:32.240 --> 00:06:34.629 align:start position:0%
start value only
and<00:06:32.560><c> so</c><00:06:33.039><c> let's</c><00:06:33.360><c> also</c><00:06:33.680><c> declare</c><00:06:34.080><c> an</c><00:06:34.319><c> output</c>

00:06:34.629 --> 00:06:34.639 align:start position:0%
and so let's also declare an output
 

00:06:34.639 --> 00:06:36.469 align:start position:0%
and so let's also declare an output
where<00:06:34.960><c> we're</c><00:06:35.120><c> going</c><00:06:35.199><c> to</c><00:06:35.440><c> put</c><00:06:35.759><c> the</c><00:06:36.000><c> merged</c>

00:06:36.469 --> 00:06:36.479 align:start position:0%
where we're going to put the merged
 

00:06:36.479 --> 00:06:38.390 align:start position:0%
where we're going to put the merged
intervals<00:06:37.120><c> so</c><00:06:37.360><c> i'm</c><00:06:37.520><c> not</c><00:06:37.680><c> going</c><00:06:37.759><c> to</c><00:06:37.919><c> initialize</c>

00:06:38.390 --> 00:06:38.400 align:start position:0%
intervals so i'm not going to initialize
 

00:06:38.400 --> 00:06:38.870 align:start position:0%
intervals so i'm not going to initialize
this<00:06:38.560><c> to</c>

00:06:38.870 --> 00:06:38.880 align:start position:0%
this to
 

00:06:38.880 --> 00:06:40.629 align:start position:0%
this to
empty<00:06:39.199><c> i'm</c><00:06:39.440><c> actually</c><00:06:39.759><c> going</c><00:06:39.919><c> to</c><00:06:40.080><c> take</c><00:06:40.319><c> the</c>

00:06:40.629 --> 00:06:40.639 align:start position:0%
empty i'm actually going to take the
 

00:06:40.639 --> 00:06:41.990 align:start position:0%
empty i'm actually going to take the
first<00:06:41.120><c> interval</c>

00:06:41.990 --> 00:06:42.000 align:start position:0%
first interval
 

00:06:42.000 --> 00:06:44.629 align:start position:0%
first interval
and<00:06:42.639><c> have</c><00:06:42.960><c> it</c><00:06:43.199><c> inserted</c><00:06:43.840><c> into</c><00:06:44.080><c> the</c><00:06:44.240><c> output</c>

00:06:44.629 --> 00:06:44.639 align:start position:0%
and have it inserted into the output
 

00:06:44.639 --> 00:06:45.270 align:start position:0%
and have it inserted into the output
just<00:06:44.960><c> so</c>

00:06:45.270 --> 00:06:45.280 align:start position:0%
just so
 

00:06:45.280 --> 00:06:48.309 align:start position:0%
just so
i<00:06:45.520><c> can</c><00:06:45.759><c> avoid</c><00:06:46.400><c> an</c><00:06:46.639><c> edge</c><00:06:46.880><c> case</c><00:06:47.520><c> so</c><00:06:47.680><c> we</c><00:06:48.000><c> have</c>

00:06:48.309 --> 00:06:48.319 align:start position:0%
i can avoid an edge case so we have
 

00:06:48.319 --> 00:06:49.430 align:start position:0%
i can avoid an edge case so we have
initialized

00:06:49.430 --> 00:06:49.440 align:start position:0%
initialized
 

00:06:49.440 --> 00:06:51.189 align:start position:0%
initialized
the<00:06:49.759><c> interval</c><00:06:50.319><c> so</c><00:06:50.479><c> now</c><00:06:50.720><c> we're</c><00:06:50.880><c> going</c><00:06:50.960><c> to</c>

00:06:51.189 --> 00:06:51.199 align:start position:0%
the interval so now we're going to
 

00:06:51.199 --> 00:06:53.189 align:start position:0%
the interval so now we're going to
iterate<00:06:51.759><c> through</c><00:06:52.319><c> every</c>

00:06:53.189 --> 00:06:53.199 align:start position:0%
iterate through every
 

00:06:53.199 --> 00:06:56.790 align:start position:0%
iterate through every
single<00:06:54.000><c> interval</c><00:06:54.880><c> in</c><00:06:55.199><c> sorted</c><00:06:55.680><c> order</c>

00:06:56.790 --> 00:06:56.800 align:start position:0%
single interval in sorted order
 

00:06:56.800 --> 00:06:59.029 align:start position:0%
single interval in sorted order
and<00:06:57.120><c> technically</c><00:06:57.680><c> we</c><00:06:57.840><c> can</c><00:06:58.240><c> skip</c><00:06:58.560><c> the</c><00:06:58.720><c> first</c>

00:06:59.029 --> 00:06:59.039 align:start position:0%
and technically we can skip the first
 

00:06:59.039 --> 00:07:01.110 align:start position:0%
and technically we can skip the first
one<00:06:59.280><c> because</c><00:06:59.520><c> we</c><00:06:59.759><c> already</c><00:07:00.240><c> added</c><00:07:00.560><c> the</c><00:07:00.720><c> first</c>

00:07:01.110 --> 00:07:01.120 align:start position:0%
one because we already added the first
 

00:07:01.120 --> 00:07:04.390 align:start position:0%
one because we already added the first
interval<00:07:01.919><c> into</c><00:07:02.960><c> the</c><00:07:03.680><c> output</c>

00:07:04.390 --> 00:07:04.400 align:start position:0%
interval into the output
 

00:07:04.400 --> 00:07:06.870 align:start position:0%
interval into the output
and<00:07:04.720><c> instead</c><00:07:05.039><c> of</c><00:07:05.199><c> just</c><00:07:05.440><c> having</c><00:07:06.240><c> the</c><00:07:06.479><c> interval</c>

00:07:06.870 --> 00:07:06.880 align:start position:0%
and instead of just having the interval
 

00:07:06.880 --> 00:07:08.309 align:start position:0%
and instead of just having the interval
itself<00:07:07.280><c> we</c><00:07:07.440><c> know</c><00:07:07.599><c> we're</c><00:07:07.680><c> going</c><00:07:07.759><c> to</c><00:07:07.919><c> use</c><00:07:08.080><c> the</c>

00:07:08.309 --> 00:07:08.319 align:start position:0%
itself we know we're going to use the
 

00:07:08.319 --> 00:07:09.909 align:start position:0%
itself we know we're going to use the
start<00:07:08.720><c> and</c><00:07:08.880><c> end</c><00:07:09.039><c> value</c><00:07:09.360><c> so</c><00:07:09.440><c> i'm</c><00:07:09.599><c> just</c><00:07:09.680><c> going</c><00:07:09.759><c> to</c>

00:07:09.909 --> 00:07:09.919 align:start position:0%
start and end value so i'm just going to
 

00:07:09.919 --> 00:07:10.950 align:start position:0%
start and end value so i'm just going to
extract<00:07:10.479><c> them</c>

00:07:10.950 --> 00:07:10.960 align:start position:0%
extract them
 

00:07:10.960 --> 00:07:14.230 align:start position:0%
extract them
like<00:07:11.199><c> this</c><00:07:11.919><c> and</c><00:07:12.080><c> so</c><00:07:12.400><c> how</c><00:07:12.639><c> do</c><00:07:12.880><c> we</c><00:07:13.199><c> know</c><00:07:13.759><c> if</c>

00:07:14.230 --> 00:07:14.240 align:start position:0%
like this and so how do we know if
 

00:07:14.240 --> 00:07:16.629 align:start position:0%
like this and so how do we know if
the<00:07:14.560><c> interval</c><00:07:15.120><c> is</c><00:07:15.440><c> overlapping</c><00:07:16.240><c> with</c><00:07:16.479><c> the</c>

00:07:16.629 --> 00:07:16.639 align:start position:0%
the interval is overlapping with the
 

00:07:16.639 --> 00:07:17.749 align:start position:0%
the interval is overlapping with the
most<00:07:17.199><c> recent</c>

00:07:17.749 --> 00:07:17.759 align:start position:0%
most recent
 

00:07:17.759 --> 00:07:20.230 align:start position:0%
most recent
interval<00:07:18.160><c> well</c><00:07:18.400><c> we</c><00:07:18.560><c> can</c><00:07:18.880><c> get</c><00:07:19.280><c> from</c><00:07:19.599><c> our</c><00:07:19.840><c> output</c>

00:07:20.230 --> 00:07:20.240 align:start position:0%
interval well we can get from our output
 

00:07:20.240 --> 00:07:22.309 align:start position:0%
interval well we can get from our output
this<00:07:20.400><c> is</c><00:07:20.560><c> why</c><00:07:20.800><c> i</c><00:07:20.960><c> added</c><00:07:21.360><c> one</c><00:07:21.520><c> so</c><00:07:21.759><c> we</c><00:07:21.840><c> can</c><00:07:22.000><c> avoid</c>

00:07:22.309 --> 00:07:22.319 align:start position:0%
this is why i added one so we can avoid
 

00:07:22.319 --> 00:07:23.589 align:start position:0%
this is why i added one so we can avoid
the<00:07:22.400><c> edge</c><00:07:22.639><c> case</c><00:07:22.960><c> from</c><00:07:23.199><c> our</c>

00:07:23.589 --> 00:07:23.599 align:start position:0%
the edge case from our
 

00:07:23.599 --> 00:07:27.110 align:start position:0%
the edge case from our
output<00:07:24.240><c> we</c><00:07:24.400><c> can</c><00:07:24.639><c> get</c><00:07:24.880><c> the</c><00:07:25.199><c> most</c><00:07:26.039><c> recently</c>

00:07:27.110 --> 00:07:27.120 align:start position:0%
output we can get the most recently
 

00:07:27.120 --> 00:07:28.469 align:start position:0%
output we can get the most recently
added<00:07:27.520><c> interval</c>

00:07:28.469 --> 00:07:28.479 align:start position:0%
added interval
 

00:07:28.479 --> 00:07:31.830 align:start position:0%
added interval
and<00:07:29.120><c> get</c><00:07:29.360><c> the</c><00:07:29.759><c> end</c><00:07:30.240><c> value</c><00:07:30.800><c> of</c><00:07:31.039><c> it</c><00:07:31.360><c> because</c>

00:07:31.830 --> 00:07:31.840 align:start position:0%
and get the end value of it because
 

00:07:31.840 --> 00:07:33.670 align:start position:0%
and get the end value of it because
that's<00:07:32.080><c> what</c><00:07:32.240><c> we</c><00:07:32.400><c> need</c><00:07:32.800><c> to</c><00:07:33.039><c> know</c><00:07:33.280><c> if</c><00:07:33.520><c> it</c>

00:07:33.670 --> 00:07:33.680 align:start position:0%
that's what we need to know if it
 

00:07:33.680 --> 00:07:34.629 align:start position:0%
that's what we need to know if it
overlaps

00:07:34.629 --> 00:07:34.639 align:start position:0%
overlaps
 

00:07:34.639 --> 00:07:36.950 align:start position:0%
overlaps
so<00:07:34.800><c> the</c><00:07:35.039><c> end</c><00:07:35.360><c> value</c><00:07:35.759><c> of</c><00:07:35.919><c> the</c><00:07:36.080><c> most</c><00:07:36.479><c> recent</c>

00:07:36.950 --> 00:07:36.960 align:start position:0%
so the end value of the most recent
 

00:07:36.960 --> 00:07:37.749 align:start position:0%
so the end value of the most recent
interval

00:07:37.749 --> 00:07:37.759 align:start position:0%
interval
 

00:07:37.759 --> 00:07:40.790 align:start position:0%
interval
we'll<00:07:38.000><c> call</c><00:07:38.240><c> it</c><00:07:38.560><c> last</c><00:07:39.599><c> end</c><00:07:40.400><c> and</c><00:07:40.560><c> we're</c><00:07:40.720><c> going</c>

00:07:40.790 --> 00:07:40.800 align:start position:0%
we'll call it last end and we're going
 

00:07:40.800 --> 00:07:42.550 align:start position:0%
we'll call it last end and we're going
to<00:07:40.880><c> check</c><00:07:41.120><c> of</c><00:07:41.280><c> the</c><00:07:41.520><c> current</c><00:07:41.919><c> interval</c><00:07:42.319><c> we're</c>

00:07:42.550 --> 00:07:42.560 align:start position:0%
to check of the current interval we're
 

00:07:42.560 --> 00:07:44.390 align:start position:0%
to check of the current interval we're
at<00:07:42.720><c> the</c><00:07:42.880><c> start</c><00:07:43.199><c> and</c><00:07:43.440><c> end</c><00:07:43.520><c> value</c>

00:07:44.390 --> 00:07:44.400 align:start position:0%
at the start and end value
 

00:07:44.400 --> 00:07:47.990 align:start position:0%
at the start and end value
we're<00:07:44.639><c> iterating</c><00:07:45.120><c> through</c><00:07:46.000><c> if</c><00:07:46.720><c> the</c><00:07:47.039><c> star</c>

00:07:47.990 --> 00:07:48.000 align:start position:0%
we're iterating through if the star
 

00:07:48.000 --> 00:07:51.589 align:start position:0%
we're iterating through if the star
is<00:07:48.879><c> less</c><00:07:49.360><c> than</c><00:07:50.160><c> or</c><00:07:50.800><c> equal</c>

00:07:51.589 --> 00:07:51.599 align:start position:0%
is less than or equal
 

00:07:51.599 --> 00:07:54.790 align:start position:0%
is less than or equal
to<00:07:51.759><c> the</c><00:07:52.160><c> last</c><00:07:52.879><c> ending</c><00:07:53.360><c> value</c><00:07:54.160><c> that</c><00:07:54.479><c> means</c>

00:07:54.790 --> 00:07:54.800 align:start position:0%
to the last ending value that means
 

00:07:54.800 --> 00:07:56.710 align:start position:0%
to the last ending value that means
they're<00:07:55.039><c> overlapping</c><00:07:55.680><c> the</c><00:07:55.919><c> equal</c><00:07:56.479><c> is</c>

00:07:56.710 --> 00:07:56.720 align:start position:0%
they're overlapping the equal is
 

00:07:56.720 --> 00:07:57.990 align:start position:0%
they're overlapping the equal is
important<00:07:57.199><c> because</c><00:07:57.440><c> they</c>

00:07:57.990 --> 00:07:58.000 align:start position:0%
important because they
 

00:07:58.000 --> 00:07:59.909 align:start position:0%
important because they
they<00:07:58.160><c> told</c><00:07:58.479><c> us</c><00:07:58.639><c> in</c><00:07:58.720><c> the</c><00:07:58.879><c> second</c><00:07:59.199><c> example</c><00:07:59.680><c> that</c>

00:07:59.909 --> 00:07:59.919 align:start position:0%
they told us in the second example that
 

00:07:59.919 --> 00:08:01.189 align:start position:0%
they told us in the second example that
we<00:08:00.400><c> are</c><00:08:00.639><c> counting</c>

00:08:01.189 --> 00:08:01.199 align:start position:0%
we are counting
 

00:08:01.199 --> 00:08:03.909 align:start position:0%
we are counting
equal<00:08:01.759><c> as</c><00:08:02.160><c> overlapping</c><00:08:03.199><c> so</c><00:08:03.440><c> if</c><00:08:03.599><c> they</c><00:08:03.759><c> are</c>

00:08:03.909 --> 00:08:03.919 align:start position:0%
equal as overlapping so if they are
 

00:08:03.919 --> 00:08:05.350 align:start position:0%
equal as overlapping so if they are
overlapping<00:08:04.479><c> what</c><00:08:04.639><c> are</c><00:08:04.720><c> we</c><00:08:04.800><c> gonna</c><00:08:05.039><c> do</c><00:08:05.199><c> we're</c>

00:08:05.350 --> 00:08:05.360 align:start position:0%
overlapping what are we gonna do we're
 

00:08:05.360 --> 00:08:06.309 align:start position:0%
overlapping what are we gonna do we're
gonna<00:08:05.599><c> merge</c><00:08:06.000><c> them</c>

00:08:06.309 --> 00:08:06.319 align:start position:0%
gonna merge them
 

00:08:06.319 --> 00:08:09.029 align:start position:0%
gonna merge them
how<00:08:06.479><c> do</c><00:08:06.639><c> we</c><00:08:06.800><c> merge</c><00:08:07.120><c> them</c><00:08:07.680><c> well</c><00:08:08.160><c> all</c><00:08:08.400><c> we</c><00:08:08.639><c> have</c><00:08:08.800><c> to</c>

00:08:09.029 --> 00:08:09.039 align:start position:0%
how do we merge them well all we have to
 

00:08:09.039 --> 00:08:09.589 align:start position:0%
how do we merge them well all we have to
do

00:08:09.589 --> 00:08:09.599 align:start position:0%
do
 

00:08:09.599 --> 00:08:13.270 align:start position:0%
do
is<00:08:10.319><c> take</c><00:08:10.639><c> the</c><00:08:10.879><c> most</c><00:08:11.520><c> recently</c><00:08:12.560><c> added</c>

00:08:13.270 --> 00:08:13.280 align:start position:0%
is take the most recently added
 

00:08:13.280 --> 00:08:16.629 align:start position:0%
is take the most recently added
interval<00:08:14.080><c> and</c><00:08:14.319><c> take</c><00:08:14.960><c> the</c><00:08:15.360><c> ending</c><00:08:15.840><c> value</c>

00:08:16.629 --> 00:08:16.639 align:start position:0%
interval and take the ending value
 

00:08:16.639 --> 00:08:20.309 align:start position:0%
interval and take the ending value
of<00:08:16.879><c> it</c><00:08:17.360><c> and</c><00:08:17.680><c> set</c><00:08:18.000><c> it</c><00:08:18.319><c> to</c><00:08:18.560><c> the</c><00:08:18.879><c> max</c>

00:08:20.309 --> 00:08:20.319 align:start position:0%
of it and set it to the max
 

00:08:20.319 --> 00:08:23.749 align:start position:0%
of it and set it to the max
of<00:08:20.560><c> itself</c><00:08:21.280><c> which</c><00:08:21.599><c> we</c><00:08:21.840><c> already</c><00:08:22.240><c> have</c><00:08:22.639><c> in</c><00:08:23.280><c> last</c>

00:08:23.749 --> 00:08:23.759 align:start position:0%
of itself which we already have in last
 

00:08:23.759 --> 00:08:24.550 align:start position:0%
of itself which we already have in last
end

00:08:24.550 --> 00:08:24.560 align:start position:0%
end
 

00:08:24.560 --> 00:08:27.430 align:start position:0%
end
and<00:08:24.879><c> the</c><00:08:25.039><c> max</c><00:08:25.520><c> of</c><00:08:25.599><c> the</c><00:08:26.080><c> current</c><00:08:26.560><c> end</c><00:08:26.800><c> value</c>

00:08:27.430 --> 00:08:27.440 align:start position:0%
and the max of the current end value
 

00:08:27.440 --> 00:08:28.550 align:start position:0%
and the max of the current end value
that<00:08:27.680><c> we're</c><00:08:28.000><c> at</c>

00:08:28.550 --> 00:08:28.560 align:start position:0%
that we're at
 

00:08:28.560 --> 00:08:30.469 align:start position:0%
that we're at
and<00:08:28.720><c> the</c><00:08:28.879><c> reason</c><00:08:29.199><c> we</c><00:08:29.360><c> need</c><00:08:29.520><c> to</c><00:08:29.599><c> take</c><00:08:29.759><c> the</c><00:08:29.919><c> max</c>

00:08:30.469 --> 00:08:30.479 align:start position:0%
and the reason we need to take the max
 

00:08:30.479 --> 00:08:31.830 align:start position:0%
and the reason we need to take the max
is<00:08:30.720><c> what</c><00:08:30.960><c> if</c><00:08:31.039><c> we</c><00:08:31.199><c> had</c>

00:08:31.830 --> 00:08:31.840 align:start position:0%
is what if we had
 

00:08:31.840 --> 00:08:35.190 align:start position:0%
is what if we had
two<00:08:32.159><c> intervals</c><00:08:33.279><c> starting</c><00:08:33.680><c> at</c><00:08:33.919><c> 1</c><00:08:34.560><c> 5</c>

00:08:35.190 --> 00:08:35.200 align:start position:0%
two intervals starting at 1 5
 

00:08:35.200 --> 00:08:38.870 align:start position:0%
two intervals starting at 1 5
and<00:08:35.440><c> the</c><00:08:35.760><c> second</c><00:08:36.159><c> interval</c><00:08:37.120><c> is</c><00:08:37.839><c> 2</c>

00:08:38.870 --> 00:08:38.880 align:start position:0%
and the second interval is 2
 

00:08:38.880 --> 00:08:41.990 align:start position:0%
and the second interval is 2
4<00:08:39.599><c> because</c><00:08:40.640><c> we</c><00:08:40.800><c> would</c><00:08:41.039><c> iterate</c><00:08:41.519><c> through</c><00:08:41.680><c> them</c>

00:08:41.990 --> 00:08:42.000 align:start position:0%
4 because we would iterate through them
 

00:08:42.000 --> 00:08:43.990 align:start position:0%
4 because we would iterate through them
in<00:08:42.159><c> this</c><00:08:42.479><c> order</c><00:08:42.880><c> because</c><00:08:43.360><c> this</c><00:08:43.599><c> has</c><00:08:43.839><c> a</c>

00:08:43.990 --> 00:08:44.000 align:start position:0%
in this order because this has a
 

00:08:44.000 --> 00:08:45.670 align:start position:0%
in this order because this has a
starting<00:08:44.320><c> value</c><00:08:44.640><c> of</c><00:08:44.720><c> 1</c><00:08:44.959><c> this</c><00:08:45.120><c> has</c><00:08:45.279><c> a</c><00:08:45.440><c> starting</c>

00:08:45.670 --> 00:08:45.680 align:start position:0%
starting value of 1 this has a starting
 

00:08:45.680 --> 00:08:48.070 align:start position:0%
starting value of 1 this has a starting
value<00:08:46.000><c> of</c><00:08:46.160><c> 2</c><00:08:46.560><c> but</c><00:08:46.800><c> notice</c><00:08:47.200><c> how</c><00:08:47.440><c> this</c><00:08:47.680><c> actually</c>

00:08:48.070 --> 00:08:48.080 align:start position:0%
value of 2 but notice how this actually
 

00:08:48.080 --> 00:08:48.630 align:start position:0%
value of 2 but notice how this actually
has<00:08:48.320><c> a</c>

00:08:48.630 --> 00:08:48.640 align:start position:0%
has a
 

00:08:48.640 --> 00:08:51.910 align:start position:0%
has a
larger<00:08:49.279><c> end</c><00:08:49.519><c> value</c><00:08:50.240><c> than</c><00:08:50.480><c> this</c><00:08:50.720><c> one</c><00:08:51.120><c> so</c><00:08:51.600><c> if</c><00:08:51.760><c> we</c>

00:08:51.910 --> 00:08:51.920 align:start position:0%
larger end value than this one so if we
 

00:08:51.920 --> 00:08:52.550 align:start position:0%
larger end value than this one so if we
just<00:08:52.160><c> take</c>

00:08:52.550 --> 00:08:52.560 align:start position:0%
just take
 

00:08:52.560 --> 00:08:55.590 align:start position:0%
just take
4<00:08:53.040><c> and</c><00:08:53.519><c> merge</c><00:08:53.920><c> this</c><00:08:54.240><c> together</c><00:08:54.720><c> and</c><00:08:55.120><c> set</c><00:08:55.440><c> this</c>

00:08:55.590 --> 00:08:55.600 align:start position:0%
4 and merge this together and set this
 

00:08:55.600 --> 00:08:56.949 align:start position:0%
4 and merge this together and set this
to<00:08:55.760><c> four</c><00:08:56.000><c> we're</c><00:08:56.160><c> actually</c><00:08:56.480><c> making</c><00:08:56.720><c> the</c>

00:08:56.949 --> 00:08:56.959 align:start position:0%
to four we're actually making the
 

00:08:56.959 --> 00:08:57.430 align:start position:0%
to four we're actually making the
interval

00:08:57.430 --> 00:08:57.440 align:start position:0%
interval
 

00:08:57.440 --> 00:09:00.230 align:start position:0%
interval
smaller<00:08:57.839><c> we</c><00:08:58.000><c> want</c><00:08:58.160><c> to</c><00:08:58.399><c> keep</c><00:08:58.880><c> the</c><00:08:59.120><c> five</c><00:08:59.519><c> because</c>

00:09:00.230 --> 00:09:00.240 align:start position:0%
smaller we want to keep the five because
 

00:09:00.240 --> 00:09:01.829 align:start position:0%
smaller we want to keep the five because
merging<00:09:00.720><c> these</c><00:09:00.959><c> two</c><00:09:01.200><c> together</c>

00:09:01.829 --> 00:09:01.839 align:start position:0%
merging these two together
 

00:09:01.839 --> 00:09:05.269 align:start position:0%
merging these two together
is<00:09:02.399><c> going</c><00:09:02.560><c> to</c><00:09:02.800><c> actually</c><00:09:03.200><c> result</c><00:09:03.839><c> in</c><00:09:04.399><c> one</c>

00:09:05.269 --> 00:09:05.279 align:start position:0%
is going to actually result in one
 

00:09:05.279 --> 00:09:08.110 align:start position:0%
is going to actually result in one
five<00:09:06.080><c> so</c><00:09:06.560><c> in</c><00:09:06.959><c> the</c><00:09:07.200><c> case</c><00:09:07.519><c> that</c><00:09:07.680><c> they're</c>

00:09:08.110 --> 00:09:08.120 align:start position:0%
five so in the case that they're
 

00:09:08.120 --> 00:09:10.070 align:start position:0%
five so in the case that they're
non-overlapping<00:09:09.200><c> what</c><00:09:09.360><c> are</c><00:09:09.440><c> we</c><00:09:09.600><c> going</c><00:09:09.680><c> to</c><00:09:09.839><c> do</c>

00:09:10.070 --> 00:09:10.080 align:start position:0%
non-overlapping what are we going to do
 

00:09:10.080 --> 00:09:12.230 align:start position:0%
non-overlapping what are we going to do
well<00:09:10.320><c> we</c><00:09:10.480><c> don't</c><00:09:10.720><c> have</c><00:09:10.880><c> to</c><00:09:11.120><c> merge</c><00:09:11.519><c> but</c><00:09:11.680><c> we</c><00:09:11.920><c> do</c>

00:09:12.230 --> 00:09:12.240 align:start position:0%
well we don't have to merge but we do
 

00:09:12.240 --> 00:09:13.030 align:start position:0%
well we don't have to merge but we do
have<00:09:12.480><c> to</c>

00:09:13.030 --> 00:09:13.040 align:start position:0%
have to
 

00:09:13.040 --> 00:09:16.230 align:start position:0%
have to
take<00:09:13.440><c> that</c><00:09:13.839><c> interval</c><00:09:14.720><c> and</c><00:09:15.040><c> still</c><00:09:15.600><c> add</c><00:09:15.920><c> it</c><00:09:16.080><c> to</c>

00:09:16.230 --> 00:09:16.240 align:start position:0%
take that interval and still add it to
 

00:09:16.240 --> 00:09:16.550 align:start position:0%
take that interval and still add it to
our

00:09:16.550 --> 00:09:16.560 align:start position:0%
our
 

00:09:16.560 --> 00:09:19.829 align:start position:0%
our
output<00:09:17.279><c> so</c><00:09:17.839><c> we're</c><00:09:18.080><c> going</c><00:09:18.160><c> to</c><00:09:18.320><c> take</c><00:09:18.959><c> start</c><00:09:19.440><c> end</c>

00:09:19.829 --> 00:09:19.839 align:start position:0%
output so we're going to take start end
 

00:09:19.839 --> 00:09:21.990 align:start position:0%
output so we're going to take start end
and<00:09:19.920><c> just</c><00:09:20.160><c> add</c><00:09:20.399><c> it</c><00:09:20.480><c> to</c><00:09:20.640><c> our</c><00:09:20.800><c> output</c><00:09:21.120><c> so</c><00:09:21.839><c> what</c>

00:09:21.990 --> 00:09:22.000 align:start position:0%
and just add it to our output so what
 

00:09:22.000 --> 00:09:23.670 align:start position:0%
and just add it to our output so what
would<00:09:22.240><c> be</c><00:09:22.320><c> an</c><00:09:22.480><c> example</c><00:09:22.880><c> of</c><00:09:22.959><c> that</c><00:09:23.200><c> well</c><00:09:23.440><c> what</c><00:09:23.600><c> if</c>

00:09:23.670 --> 00:09:23.680 align:start position:0%
would be an example of that well what if
 

00:09:23.680 --> 00:09:24.470 align:start position:0%
would be an example of that well what if
we<00:09:23.839><c> had</c>

00:09:24.470 --> 00:09:24.480 align:start position:0%
we had
 

00:09:24.480 --> 00:09:28.030 align:start position:0%
we had
7<00:09:25.440><c> a</c><00:09:26.160><c> right</c><00:09:26.399><c> these</c><00:09:26.720><c> two</c><00:09:27.200><c> intervals</c><00:09:27.760><c> are</c>

00:09:28.030 --> 00:09:28.040 align:start position:0%
7 a right these two intervals are
 

00:09:28.040 --> 00:09:30.070 align:start position:0%
7 a right these two intervals are
non-overlapping<00:09:29.120><c> so</c><00:09:29.279><c> the</c><00:09:29.440><c> result</c><00:09:29.839><c> would</c>

00:09:30.070 --> 00:09:30.080 align:start position:0%
non-overlapping so the result would
 

00:09:30.080 --> 00:09:30.550 align:start position:0%
non-overlapping so the result would
actually

00:09:30.550 --> 00:09:30.560 align:start position:0%
actually
 

00:09:30.560 --> 00:09:32.870 align:start position:0%
actually
be<00:09:31.279><c> itself</c><00:09:31.920><c> right</c><00:09:32.080><c> we</c><00:09:32.240><c> don't</c><00:09:32.399><c> have</c><00:09:32.560><c> to</c><00:09:32.640><c> make</c>

00:09:32.870 --> 00:09:32.880 align:start position:0%
be itself right we don't have to make
 

00:09:32.880 --> 00:09:34.710 align:start position:0%
be itself right we don't have to make
any<00:09:33.120><c> changes</c><00:09:33.519><c> we</c><00:09:33.680><c> don't</c><00:09:33.839><c> have</c><00:09:34.000><c> to</c><00:09:34.160><c> merge</c>

00:09:34.710 --> 00:09:34.720 align:start position:0%
any changes we don't have to merge
 

00:09:34.720 --> 00:09:37.350 align:start position:0%
any changes we don't have to merge
we<00:09:34.880><c> can</c><00:09:35.040><c> just</c><00:09:35.200><c> leave</c><00:09:35.519><c> it</c><00:09:35.680><c> as</c><00:09:36.000><c> it</c><00:09:36.240><c> is</c><00:09:36.880><c> and</c><00:09:37.040><c> that's</c>

00:09:37.350 --> 00:09:37.360 align:start position:0%
we can just leave it as it is and that's
 

00:09:37.360 --> 00:09:38.470 align:start position:0%
we can just leave it as it is and that's
actually<00:09:37.839><c> it</c>

00:09:38.470 --> 00:09:38.480 align:start position:0%
actually it
 

00:09:38.480 --> 00:09:40.389 align:start position:0%
actually it
so<00:09:38.720><c> we</c><00:09:38.959><c> didn't</c><00:09:39.200><c> really</c><00:09:39.440><c> have</c><00:09:39.519><c> to</c><00:09:39.680><c> do</c><00:09:39.920><c> anything</c>

00:09:40.389 --> 00:09:40.399 align:start position:0%
so we didn't really have to do anything
 

00:09:40.399 --> 00:09:42.070 align:start position:0%
so we didn't really have to do anything
since<00:09:40.640><c> we</c><00:09:40.880><c> used</c><00:09:41.360><c> the</c>

00:09:42.070 --> 00:09:42.080 align:start position:0%
since we used the
 

00:09:42.080 --> 00:09:44.870 align:start position:0%
since we used the
built<00:09:42.480><c> in</c><00:09:42.720><c> sort</c><00:09:43.360><c> we</c><00:09:43.600><c> took</c><00:09:43.839><c> care</c><00:09:44.000><c> of</c><00:09:44.160><c> the</c><00:09:44.399><c> main</c>

00:09:44.870 --> 00:09:44.880 align:start position:0%
built in sort we took care of the main
 

00:09:44.880 --> 00:09:45.670 align:start position:0%
built in sort we took care of the main
problem

00:09:45.670 --> 00:09:45.680 align:start position:0%
problem
 

00:09:45.680 --> 00:09:47.750 align:start position:0%
problem
main<00:09:45.920><c> part</c><00:09:46.160><c> of</c><00:09:46.240><c> this</c><00:09:46.480><c> problem</c><00:09:47.120><c> and</c><00:09:47.519><c> all</c><00:09:47.680><c> we</c>

00:09:47.750 --> 00:09:47.760 align:start position:0%
main part of this problem and all we
 

00:09:47.760 --> 00:09:49.430 align:start position:0%
main part of this problem and all we
have<00:09:47.920><c> to</c><00:09:48.000><c> do</c><00:09:48.160><c> now</c><00:09:48.399><c> is</c><00:09:48.640><c> return</c>

00:09:49.430 --> 00:09:49.440 align:start position:0%
have to do now is return
 

00:09:49.440 --> 00:09:51.750 align:start position:0%
have to do now is return
the<00:09:49.760><c> output</c><00:09:50.640><c> and</c><00:09:50.800><c> so</c><00:09:50.959><c> this</c><00:09:51.200><c> is</c><00:09:51.279><c> a</c><00:09:51.519><c> pretty</c>

00:09:51.750 --> 00:09:51.760 align:start position:0%
the output and so this is a pretty
 

00:09:51.760 --> 00:09:53.030 align:start position:0%
the output and so this is a pretty
efficient<00:09:52.240><c> solution</c>

00:09:53.030 --> 00:09:53.040 align:start position:0%
efficient solution
 

00:09:53.040 --> 00:09:54.870 align:start position:0%
efficient solution
i<00:09:53.200><c> hope</c><00:09:53.440><c> this</c><00:09:53.600><c> kind</c><00:09:53.839><c> of</c><00:09:54.000><c> explained</c><00:09:54.560><c> a</c><00:09:54.720><c> little</c>

00:09:54.870 --> 00:09:54.880 align:start position:0%
i hope this kind of explained a little
 

00:09:54.880 --> 00:09:56.470 align:start position:0%
i hope this kind of explained a little
bit<00:09:55.200><c> of</c><00:09:55.360><c> the</c><00:09:55.680><c> intuition</c>

00:09:56.470 --> 00:09:56.480 align:start position:0%
bit of the intuition
 

00:09:56.480 --> 00:09:58.310 align:start position:0%
bit of the intuition
and<00:09:56.640><c> you</c><00:09:56.800><c> kind</c><00:09:56.959><c> of</c><00:09:57.120><c> have</c><00:09:57.360><c> like</c><00:09:57.600><c> a</c><00:09:57.760><c> visual</c>

00:09:58.310 --> 00:09:58.320 align:start position:0%
and you kind of have like a visual
 

00:09:58.320 --> 00:10:00.389 align:start position:0%
and you kind of have like a visual
picture<00:09:58.800><c> of</c><00:09:58.959><c> what</c><00:09:59.120><c> is</c><00:09:59.360><c> actually</c><00:09:59.920><c> going</c>

00:10:00.389 --> 00:10:00.399 align:start position:0%
picture of what is actually going
 

00:10:00.399 --> 00:10:02.870 align:start position:0%
picture of what is actually going
on<00:10:01.120><c> as</c><00:10:01.360><c> we</c><00:10:01.519><c> run</c><00:10:01.680><c> this</c><00:10:01.920><c> algorithm</c><00:10:02.399><c> and</c><00:10:02.640><c> why</c>

00:10:02.870 --> 00:10:02.880 align:start position:0%
on as we run this algorithm and why
 

00:10:02.880 --> 00:10:03.990 align:start position:0%
on as we run this algorithm and why
we're<00:10:03.040><c> doing</c><00:10:03.360><c> it</c><00:10:03.440><c> the</c><00:10:03.519><c> way</c><00:10:03.680><c> we</c>

00:10:03.990 --> 00:10:04.000 align:start position:0%
we're doing it the way we
 

00:10:04.000 --> 00:10:06.230 align:start position:0%
we're doing it the way we
are<00:10:04.399><c> and</c><00:10:04.560><c> i</c><00:10:04.640><c> hope</c><00:10:04.800><c> this</c><00:10:05.040><c> was</c><00:10:05.200><c> helpful</c><00:10:05.920><c> if</c><00:10:06.079><c> you</c>

00:10:06.230 --> 00:10:06.240 align:start position:0%
are and i hope this was helpful if you
 

00:10:06.240 --> 00:10:07.110 align:start position:0%
are and i hope this was helpful if you
enjoyed

00:10:07.110 --> 00:10:07.120 align:start position:0%
enjoyed
 

00:10:07.120 --> 00:10:08.949 align:start position:0%
enjoyed
please<00:10:07.600><c> leave</c><00:10:07.760><c> a</c><00:10:07.920><c> like</c><00:10:08.160><c> and</c><00:10:08.240><c> subscribe</c><00:10:08.800><c> it</c>

00:10:08.949 --> 00:10:08.959 align:start position:0%
please leave a like and subscribe it
 

00:10:08.959 --> 00:10:10.550 align:start position:0%
please leave a like and subscribe it
supports<00:10:09.360><c> the</c><00:10:09.440><c> channel</c><00:10:09.920><c> a</c><00:10:10.160><c> lot</c>

00:10:10.550 --> 00:10:10.560 align:start position:0%
supports the channel a lot
 

00:10:10.560 --> 00:10:15.920 align:start position:0%
supports the channel a lot
and<00:10:10.720><c> i'll</c><00:10:10.880><c> hopefully</c><00:10:11.600><c> see</c><00:10:11.760><c> you</c><00:10:11.920><c> pretty</c><00:10:12.920><c> soon</c>

